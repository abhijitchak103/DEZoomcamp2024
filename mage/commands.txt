# Copy the contents of Mage Zoomcamp
`
git clone /home/abhijit/git/mage-zoomcamp/dev.env /home/abhijit/git/mage-zoomcamp/docker-compose.yml /home/abhijit/git/mage-zoomcamp/Dockerfile /home/abhijit/git/mage-zoomcamp/README.md /home/abhijit/git/mage-zoomcamp/requirements.txt
`
# Set up environment variables

```
cd mage # assuming, your contents from previous git clone live in mage folder
cp dev.env .env # Remember to add .env to your .gitignore


# Build docker file
docker-compose build


# Incase, you need to update mage
docker pull mageai/mageai:latest

# To start running mage
docker-compose up


# Next up on mage page 
# To create a new dev profile with postgres
# Add the following lines to io_config.yaml under mage/magic_zoomcamp
# This is setup and configure the new dev profile with postgres as the backend
# The env variables are defined in Jinja syntax
dev:
    # PostgresSQL
  POSTGRES_CONNECT_TIMEOUT: 10
  POSTGRES_DBNAME: "{{ env_var('POSTGRES_DBNAME') }}"
  POSTGRES_SCHEMA: "{{ env_var('POSTGRES_SCHEMA') }}"
  POSTGRES_USER: "{{ env_var('POSTGRES_USER') }}"
  POSTGRES_PASSWORD: "{{ env_var('POSTGRES_PASSWORD') }}"
  POSTGRES_HOST: "{{ env_var('POSTGRES_HOST') }}"
  POSTGRES_PORT: "{{ env_var('POSTGRES_PORT') }}"

# To create a new pipeline
Go to Pipelines > New Pipeline > New (Standard (batch)) > Data loader > SQL
On Connection, select PostgresSQL > On profile, select dev > Click on Use raw sql which enables 
user to use direct sql queries

